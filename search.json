[{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"","what":"Descriptive Statistics","title":"Full Workflow","text":"One key elements codebook descriptive statistics shortly describing variable data set. kind descriptive statistics reported variable depends type variable. function createInputForDescriptives() creates template provide information needed calculate descriptive statistics GADSdat object. function arguments can use get better result less manual editing next step. template exported .xlsx, modified reimported R. information may need modified function label correctly. , necessary understand functionality check variable entries. brief overview different columns object: varName: name variable GADS-object varLabel: label variable GADS-object format: format variable GADS-object imp: Indicator imputed variables involved type: Indicator whether variable scale scale: Indicator variable represented group: Possibility group variables varName, varLabel format columns information variables dataset. don’t edit anything.imp can set WAHR FALSCH. several variables displayed one page, column must set WAHR variables must assigned group group.type can set variable scale. scale consisting several individual variables, scale variable set scale individual items variable. variables always get variable entry. scale column specifies variable displayed. empty, descreptives displayed. numeric variable without labeled categories. ordinal, categorical variable labeled values. Now follow possibilities variables can represented codebook table must edited .","code":"inputForDescriptives <- createInputForDescriptives(GADSdat = dat) #> Warning in FUN(data[x, , drop = FALSE], ...): Identification of fake scales #> cannot be done completely automatically. Please check if the assignment of #> which items belong to a common scale is correct. head(inputForDescriptives) #>              varName                                  varLabel format   imp #> FALSE.1           ID                                      <NA>     A2 FALSE #> FALSE.2        IDSCH                                      <NA>   F8.0 FALSE #> FALSE.3  varMetrisch metrische Beispielvariable, Kompetenzwert   F8.2 FALSE #> FALSE.4   varOrdinal ordinale Beispielvariable, Kompetenzstufe   F8.0 FALSE #> FALSE.5       varCat                 nominale Beispielvariable     A1 FALSE #> FALSE.6 skala1_item1                    Likert-Skalenindikator   F8.0 FALSE #>             type   scale       group #> FALSE.1 variable    <NA>          ID #> FALSE.2 variable    <NA>       IDSCH #> FALSE.3 variable numeric varMetrisch #> FALSE.4 variable ordinal  varOrdinal #> FALSE.5 variable    <NA>      varCat #> FALSE.6     item ordinal      skala1 writeExcel(inputForDescriptives, \"file_path/inputForDescriptives.xlsx\")"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"variables-without-descriptives","dir":"Articles","previous_headings":"Descriptive Statistics","what":"Variables without Descriptives","title":"Full Workflow","text":"can case, example, ID variables character variables. page displayed follows: entry must look like :","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"numeric-variables-without-labeled-values","dir":"Articles","previous_headings":"Descriptive Statistics","what":"Numeric Variables without labeled Values","title":"Full Workflow","text":"can used, example, variables represent age variables values decimal range. Nevertheless, variables can contain labels values. defined missing, values taken account calculations still reported. create entry numeric variable without labeled values, Excel must look like :","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"categorial-variables","dir":"Articles","previous_headings":"Descriptive Statistics","what":"Categorial Variables","title":"Full Workflow","text":"page codebook, well suited variables labeled categories: create , Excel edited follows:","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"scale-variables-with-individual-items","dir":"Articles","previous_headings":"Descriptive Statistics","what":"Scale Variables with individual items","title":"Full Workflow","text":"possible get following entries codebook scale items made : get pages individual items must labeled ordinal scale numeric. must name group displayed together.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"imputation-variables","dir":"Articles","previous_headings":"Descriptive Statistics","what":"Imputation Variables","title":"Full Workflow","text":"variables averaged value determined displayed depending specified scale, results following pages codebook: getting imp column becomes relevant. must set WAHR variables. addition, variables also need common name group , depending whether represented categorically numerically, corresponding designation scale. table adjusted accordingly, must read function getInputForDescriptives(). input used calculate descriptive statistics via calculateDescriptives(). want document several data sets codebook, must go steps data sets summarise results lists. lists can used instead individual objects following functions.","code":"inputForDescriptives_edited <- getInputForDescriptives(\"file_path/inputForDescriptives.xlsx\") # just show function calls showFunctions <- calculateDescriptives(GADSdat = dat, inputForDescriptives = inputForDescriptives_edited, showCallOnly = TRUE) showFunctions <- data.frame(varName = names(showFunctions), functionName = as.vector(showFunctions), stringsAsFactors = FALSE) showFunctions #>           varName                 functionName #> 1       pv_pooled   kennwerte.gepoolt.metrisch #> 2    pvkat_pooled kennwerte.gepoolt.kategorial #> 3 skala_fake_item              kennwerte.skala #> 4          skala1              kennwerte.skala #> 5     varMetrisch           kennwerte.metrisch #> 6      varOrdinal            kennwerte.ordinal # acutally calculate descriptives descStatistics <- calculateDescriptives(GADSdat = dat, inputForDescriptives = inputForDescriptives_edited, showCallOnly = FALSE) #> Warning: `report()` was deprecated in eatRep 0.15.0. #> ℹ For the original behavior of report() please use eatRep version 0.14.7: #>   'https://cran.r-project.org/src/contrib/Archive/eatRep/' #> ℹ The deprecated feature was likely used in the eatCodebook package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. descStatistics[[5]] #>         N.valid      mean.valid        sd.valid       min.valid       max.valid  #>             \"7\"        \"484.19\"         \"83.36\"         \"362.1\"         \"609.1\"  #> sysmis.totalabs  #>             \"0\""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"value-and-missing-labels","dir":"Articles","previous_headings":"","what":"Value and Missing Labels","title":"Full Workflow","text":"Another imported part codebook documentation value labels valid missing values. respective overview created via createMissings(). case, resulting object missings written xlsx imported via getMissings(). Note alle getXXX functions perform important cleaning preparation steps, therefore exporting xlsx obligatory.","code":"missings <- createMissings(dat, inputForDescriptives = inputForDescriptives_edited) head(missings) #>      Var.name Wert missing       LabelSH Zeilenumbruch_vor_Wert #> 3 varMetrisch  -99      ja   not reached                   nein #> 4 varMetrisch  -98      ja      omission                   nein #> 5  varOrdinal    1    nein sehr schlecht                   nein #> 6  varOrdinal    2    nein      schlecht                   nein #> 7  varOrdinal    3    nein           gut                   nein #> 8  varOrdinal    4    nein      sehr gut                   nein writeExcel(missings, \"example_miss.xlsx\", row.names = FALSE) miss_final <- getMissings(\"example_miss.xlsx\") #>      Var.name Wert missing       LabelSH Zeilenumbruch_vor_Wert #> 1 varMetrisch  -98      ja      omission                   nein #> 2 varMetrisch  -99      ja   not reached                   nein #> 3  varOrdinal    1    nein sehr schlecht                   nein #> 4  varOrdinal    2    nein      schlecht                   nein #> 5  varOrdinal    3    nein           gut                   nein #> 6  varOrdinal    4    nein      sehr gut                   nein"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"variable-information","dir":"Articles","previous_headings":"","what":"Variable Information","title":"Full Workflow","text":"createVarInfo() important part codebook created. object saved Excel, adjusted manual steps. brief overview different columns object: Var.Name: name variable .DS.und.SH: Indicator whether variable codebook data set Unterteilung.im.Skalenhandbuch: Chapter Naming Overview Layout: Assignment layout options LabelSH: label variable Anmerkung.Var: Assignment annotations codebook Gliederung: Overview chapter numbering Reihenfolge: Order variables codebook Titel: Title codebook page variable rekodiert: Display whether variable previously recoded QuelleSH: Specification source variable questionnaire Instruktionen: Specification instructions variable questionnaire Hintergrundmodell: Indication whether variable background model HGM.Reihenfolge: order background model HGM.Variable.erstellt.aus: Indication background model variables variable created intern.extern: Indication whether variable internal external use Seitenumbruch.im.Inhaltsverzeichnis: Indication whether pagination table contents title .DS.und.SH column indicates whether variable appears data set get page (ds), whether appears codebook data set (ja), whether appears scale manual (sh) neither (nein). ds assigned, example, items scale variables, receive pages. sh pooled variables, shown codebook exist actual data set. nein can assigned variables added independently. can case, example, want include BGM information, variables exist data set. Layout column automatically created reading using inferLayout(). Anmerkung.Var column, comments can inserted (special text highlighting breaks must latex logic), displayed annotations respective codebook page. Unterteilung.im.Skalenhandbuch column gives name subchapters. Gliederung column, chapter numbers must inserted. Subchapters “1.1”, “1.2”,… “2.1”. naming corresponding upper chapters done later function. naming subchapters corresponding numbers must always identical variables. Reihenfolge column, order variables codebook can specified. However, order subchapters superordinate sorting. column left empty, order table corresponds order codebook. Titel column specifies title page defaults variable label. variable recoded course previous editing, can marked ja rekodiert column variable gets corresponding note codebook inverted item scale. QuelleSH, short version bibliography can specified. Based , later function creates bibliography one can specify long version source. Instruktionen column, can use latex code indicate instruction used collect variable questionnaire. eatCodebook can also create page background model (BGM).  variable appear , Hintergrundmodell column must set ja. Otherwise, must nein. HGM.Reihenfolge can control order codebook. HGM.Variable.erstellt.aus column, variables can specified make variable question. displayed position marked yellow image.","code":"varInfo <- createVarInfo(dat, inputForDescriptives = inputForDescriptives_edited) head(varInfo) #>       Var.Name in.DS.und.SH Unterteilung.im.Skalenhandbuch Layout #> 1           ID           ja                             NA      - #> 2        IDSCH           ja                             NA      - #> 3  varMetrisch           ja                             NA      - #> 4   varOrdinal           ja                             NA      - #> 5       varCat           ja                             NA      - #> 6 skala1_item1           ds                             NA      - #>                                     LabelSH Anmerkung.Var Gliederung #> 1                                      <NA>             -          - #> 2                                      <NA>             -          - #> 3 metrische Beispielvariable, Kompetenzwert             -          - #> 4 ordinale Beispielvariable, Kompetenzstufe             -          - #> 5                 nominale Beispielvariable             -          - #> 6                    Likert-Skalenindikator             -          - #>   Reihenfolge                                     Titel rekodiert QuelleSH #> 1          NA                                      <NA>      nein        - #> 2          NA                                      <NA>      nein        - #> 3          NA metrische Beispielvariable, Kompetenzwert      nein        - #> 4          NA ordinale Beispielvariable, Kompetenzstufe      nein        - #> 5          NA                 nominale Beispielvariable      nein        - #> 6          NA                                         -      nein        - #>   Instruktionen Hintergrundmodell HGM.Reihenfolge HGM.Variable.erstellt.aus #> 1             -              nein               -                         - #> 2             -              nein               -                         - #> 3             -              nein               -                         - #> 4             -              nein               -                         - #> 5             -              nein               -                         - #> 6             -              nein               -                         - #>   intern.extern Seitenumbruch.im.Inhaltsverzeichnis #> 1             -                                nein #> 2             -                                nein #> 3             -                                nein #> 4             -                                nein #> 5             -                                nein #> 6             -                                nein writeExcel(varInfo, \"example_varInfo.xlsx\", row.names = FALSE) varInfo_final <- getVarInfo(\"example_varInfo.xlsx\") varInfo_final2 <- inferLayout(varInfo_final, GADSdat = dat, inputForDescriptives = inputForDescriptives_edited) #>       Var.Name in.DS.und.SH Unterteilung.im.Skalenhandbuch Layout #> 1           ID           ja                             BG      - #> 2        IDSCH           ja                             BG      - #> 3  varMetrisch           ja                             BG      - #> 4   varOrdinal           ja                             BG      - #> 5       varCat           ja                             BG      - #> 6 skala1_item1           ds                          Scale      - #>                                     LabelSH Anmerkung.Var Gliederung #> 1                                      <NA>             -        1.1 #> 2                                      <NA>             -        1.1 #> 3 metrische Beispielvariable, Kompetenzwert             -        1.1 #> 4 ordinale Beispielvariable, Kompetenzstufe             -        1.1 #> 5                 nominale Beispielvariable             -        1.1 #> 6                    Likert-Skalenindikator             -        1.2 #>   Reihenfolge                                     Titel rekodiert #> 1           0                               Schueler-ID      nein #> 2           0                                 School-ID      nein #> 3           0 metrische Beispielvariable, Kompetenzwert      nein #> 4           0 ordinale Beispielvariable, Kompetenzstufe      nein #> 5           0                 nominale Beispielvariable      nein #> 6           0                                         -        ja #>         QuelleSH Instruktionen Hintergrundmodell HGM.Reihenfolge #> 1              -             -              nein               - #> 2              -             -              nein               - #> 3              -             -                ja               - #> 4 Mueller (2019)             -                ja               - #> 5              -             -              nein               - #> 6              -             -              nein               - #>   HGM.Variable.erstellt.aus intern.extern Seitenumbruch.im.Inhaltsverzeichnis #> 1                         -             -                                nein #> 2                         -             -                                nein #> 3                         -             -                                nein #> 4                         -             -                                nein #> 5                         -             -                                nein #> 6                         -             -                                nein"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"structure","dir":"Articles","previous_headings":"","what":"Structure","title":"Full Workflow","text":"first foundations chapter structure already laid VarInfo. function createStructure() needed name upper chapters.","code":"struc <- createStructure(varInfo_final) head(struc) #>     Titel Ebene #> 1.1  <NA>     1 #> 1.2    BG   1.1 #> 1.3 Scale   1.2 #> 2.1  <NA>     2 #> 2.2   PVs   2.1 writeExcel(struc, \"example_struc.xlsx\", row.names = FALSE) struc_final <- getStructure(\"example_struc.xlsx\") #>         Titel Ebene #> 1  Background     1 #> 2          BG   1.1 #> 3       Scale   1.2 #> 4 Competences     2 #> 5         PVs   2.1"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"scale-information","dir":"Articles","previous_headings":"","what":"Scale Information","title":"Full Workflow","text":"order display scales correctly, also needs function createScaleInfo().","code":"scaleInfo <- createScaleInfo(inputForDescriptives_edited) head(scaleInfo) #>           varName Quelle Anzahl_valider_Werte #> 1          skala1   <NA>                    - #> 2 skala_fake_item   <NA>                    - #> 3       pv_pooled   <NA>                    - #> 4    pvkat_pooled   <NA>                    - #>                                      Items_der_Skala #> 1             skala1_item1,skala1_item2,skala1_item3 #> 2 skala_fake_item1,skala_fake_item2,skala_fake_item3 #> 3                           pv_1,pv_2,pv_3,pv_4,pv_5 #> 4            pvkat_1,pvkat_2,pvkat_3,pvkat_4,pvkat_5 #>                              Imputationen #> 1                                         #> 2                                         #> 3                pv_1,pv_2,pv_3,pv_4,pv_5 #> 4 pvkat_1,pvkat_2,pvkat_3,pvkat_4,pvkat_5 writeExcel(scaleInfo, \"example_scaleInfo.xlsx\", row.names = FALSE) scaleInfo_final <- getScaleInfo(\"example_scaleInfo.xlsx\") # workaround, should be done automatically, but currently problem with non list inputs for createScaleInfo scaleInfo_final$Quelle <- \"dat\" #>        varName Quelle Anzahl_valider_Werte #> 1       skala1    dat                    - #> 2    pv_pooled    dat                    - #> 3 pvkat_pooled    dat                    - #>                          Items_der_Skala #> 1 skala1_item1,skala1_item2,skala1_item3 #> 2                                        #> 3                                        #>                              Imputationen #> 1                                         #> 2                pv_1,pv_2,pv_3,pv_4,pv_5 #> 3 pvkat_1,pvkat_2,pvkat_3,pvkat_4,pvkat_5"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"literature-information","dir":"Articles","previous_headings":"","what":"Literature Information","title":"Full Workflow","text":"literature information contains sources cited within codebook. builds references mentioned VarInfo. latex code must also used .","code":"litInfo <- createLitInfo(varInfo_final) head(litInfo) #>       Kurzangabe Langangabe in_Literaturverzeichnis #> 1 Mueller (2019)         NA                      NA writeExcel(litInfo, \"example_litInfo.xlsx\", row.names = FALSE) litInfo_final <- getLitInfo(\"example_litInfo.xlsx\") #>       Kurzangabe                 Langangabe in_Literaturverzeichnis #> 1 Mueller (2019) Mueller, M. (2020). Titel.                      ja"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"abbreviation-list","dir":"Articles","previous_headings":"","what":"Abbreviation List","title":"Full Workflow","text":"abbreviation list can added explains abbreviations statistical symbols used throughout codebook. latex code must also used .","code":"abbrList <- createAbbrList() abbrList #> $Akronyme #> [1] Abkuerzung Bedeutung  #> <0 rows> (or 0-length row.names) #>  #> $`Statistische Formelzeichen` #> [1] Symbol    Bedeutung #> <0 rows> (or 0-length row.names) writeExcel(abbrList, \"example_abbrList.xlsx\", row.names = FALSE) abbrList_final <- makeAbbrList(\"example_abbrList.xlsx\")"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"cover-page","dir":"Articles","previous_headings":"","what":"Cover Page","title":"Full Workflow","text":"cover page can added codebook. one hand, possibility. However, can also done reading self-designed PDF page. must simply assigned object.","code":"cover <- makeCover(logoFile = NULL,                    maintitle = \"Study of Achievement\",                    subtitle = \"Codebook of Study of Achievement\",                    authors = \"Some Person\",                    addAuthors = \"With the help of some other persons\",                    schriftenreihe = \"Book 9 of Studies of Achievement\",                    bibinfo = \"test\")"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"meta-data","dir":"Articles","previous_headings":"","what":"Meta data","title":"Full Workflow","text":"Meta data can added codebook.","code":"meta <- createMetadata() meta[1, \"Title\"] <- \"Codebook Test\" meta[1, \"Author\"] <- \"Anna Muster\" meta[1, \"Keywords\"] <- \"lsa, education\" meta[1, \"Subject\"] <- \"test\" writeExcel(abbrList, \"example_meta.xlsx\", row.names = FALSE) meta_final <- makeMetadata(\"example_meta.xlsx\")"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"further-make-steps","dir":"Articles","previous_headings":"","what":"Further make steps","title":"Full Workflow","text":"Finally, previously prepared bibliography background model still need finalised. done using following syntax.","code":"lit <- makeLit(litInfo_final) hint <- makeBGM(varInfo_final) #> Es liegen keine numerischen Angaben für die Reihenfolge vor. Durch das Einlesen mithilfe von getVarInfo() kann sich die Variablen-Reihenfolge geändert haben. Diese wird nun als Grundlage genutzt."},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"chapters","dir":"Articles","previous_headings":"","what":"Chapters","title":"Full Workflow","text":"Create chapter structure. Furthermore, name top chapter assigned . name data set.","code":"chapters <- createChapters(varInfo_final2) chapters[, 2] <- \"Datensatz\""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/full_workflow.html","id":"codebook","dir":"Articles","previous_headings":"","what":"Codebook","title":"Full Workflow","text":"Now create actual codebook script via calling codebook() function. , latex code can also inserted intro lastpage, example write introductory texts design last page.","code":"descStatistics2 <- descStatistics descStatistics2$skala1[[2]] <- as.data.frame(descStatistics2$skala1[[2]]) latex_skript <- codebook(varInfo = varInfo_final2, missings = miss_final, struc = struc_final,                          scaleInfo = scaleInfo_final,                           dat = eatGADS::extractData(dat), Kennwertedatensatz = descStatistics2,                           chapters = chapters, deckblatt = cover, intro = \"\", literatur = lit,                           abkuerzverz = abbrList_final, hintmod = hint, lastpage = \"\") #>  #>  Erstelle Layout-Skripte fuer: dat #>   Layout der Variable: ID #>   Layout der Variable: IDSCH #>   Layout der Variable: varMetrisch #>   Layout der Variable: varOrdinal #>   Layout der Variable: varCat #>   Layout der Variable: skala1 #>   Layout der Variable: pv_pooled #>   Layout der Variable: pvkat_pooled"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"descriptive-statistics","dir":"Articles","previous_headings":"","what":"Descriptive Statistics","title":"Minimal Example","text":"One key elements codebook descriptive statistics shortly describing variable data set. kind descriptive statistics reported variable depends type variable. function createInputForDescriptives() creates template provide information needed calculate descriptive statistics GADSdat object. template exported .xlsx, modified reimported R. input used calculate descriptive statistics via calculateDescriptives().","code":"inputForDescriptives <- createInputForDescriptives(GADSdat = dat) head(inputForDescriptives) #>              varName varLabel format   imp     type   scale        group #> FALSE.1 Sepal_Length     <NA>   F3.1 FALSE variable numeric Sepal_Length #> FALSE.2  Sepal_Width     <NA>   F3.1 FALSE variable numeric  Sepal_Width #> FALSE.3 Petal_Length     <NA>   F3.1 FALSE variable numeric Petal_Length #> FALSE.4  Petal_Width     <NA>   F3.1 FALSE variable numeric  Petal_Width #> FALSE.5      Species     <NA>     F1 FALSE variable ordinal      Species writeExcel(inputForDescriptives, \"inputForDescriptives.xlsx\") inputForDescriptives_edited <- getInputForDescriptives(\"inputForDescriptives.xlsx\") # calculate descriptives descStatistics <- calculateDescriptives(GADSdat = dat,                                          inputForDescriptives = inputForDescriptives_edited) descStatistics[[3]] #>         N.valid      mean.valid        sd.valid       min.valid       max.valid  #>           \"150\"          \"5.84\"          \"0.83\"           \"4.3\"           \"7.9\"  #> sysmis.totalabs  #>             \"0\""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"value-and-missing-labels","dir":"Articles","previous_headings":"","what":"Value and Missing Labels","title":"Minimal Example","text":"Another important part codebook documentation value labels valid missing values. respective overview created via createMissings(). case, resulting object missings written xlsx imported via getMissings(). Note getXXX functions perform important cleaning preparation steps, therefore exporting xlsx obligatory.","code":"missings <- createMissings(dat, inputForDescriptives = inputForDescriptives_edited) head(missings) #>   Var.name Wert missing    LabelSH Zeilenumbruch_vor_Wert #> 5  Species    1    nein     setosa                   nein #> 6  Species    2    nein versicolor                   nein #> 7  Species    3    nein  virginica                   nein writeExcel(missings, \"example_miss.xlsx\", row.names = FALSE) miss_final <- getMissings(\"example_miss.xlsx\") #>   Var.name Wert missing    LabelSH Zeilenumbruch_vor_Wert #> 1  Species    1    nein     setosa                   nein #> 2  Species    2    nein versicolor                   nein #> 3  Species    3    nein  virginica                   nein"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"variable-information","dir":"Articles","previous_headings":"","what":"Variable Information","title":"Minimal Example","text":"key element eatCodebook package various forms variable information can supplied.","code":"varInfo <- createVarInfo(dat, inputForDescriptives = inputForDescriptives_edited) head(varInfo) #>       Var.Name in.DS.und.SH Unterteilung.im.Skalenhandbuch Layout LabelSH #> 1 Sepal_Length           ja                             NA      -    <NA> #> 2  Sepal_Width           ja                             NA      -    <NA> #> 3 Petal_Length           ja                             NA      -    <NA> #> 4  Petal_Width           ja                             NA      -    <NA> #> 5      Species           ja                             NA      -    <NA> #>   Anmerkung.Var Gliederung Reihenfolge Titel rekodiert QuelleSH Instruktionen #> 1             -          -          NA  <NA>      nein        -             - #> 2             -          -          NA  <NA>      nein        -             - #> 3             -          -          NA  <NA>      nein        -             - #> 4             -          -          NA  <NA>      nein        -             - #> 5             -          -          NA  <NA>      nein        -             - #>   Hintergrundmodell HGM.Reihenfolge HGM.Variable.erstellt.aus intern.extern #> 1              nein               -                         -             - #> 2              nein               -                         -             - #> 3              nein               -                         -             - #> 4              nein               -                         -             - #> 5              nein               -                         -             - #>   Seitenumbruch.im.Inhaltsverzeichnis #> 1                                nein #> 2                                nein #> 3                                nein #> 4                                nein #> 5                                nein writeExcel(varInfo, \"example_varInfo.xlsx\", row.names = FALSE) varInfo_final <- getVarInfo(\"example_varInfo.xlsx\") varInfo_final2 <- inferLayout(varInfo_final, GADSdat = dat,                                inputForDescriptives = inputForDescriptives_edited) #>       Var.Name in.DS.und.SH Unterteilung.im.Skalenhandbuch Layout LabelSH #> 1 Sepal_Length           ja                             NA      -    <NA> #> 2  Sepal_Width           ja                             NA      -    <NA> #> 3 Petal_Length           ja                             NA      -    <NA> #> 4  Petal_Width           ja                             NA      -    <NA> #> 5      Species           ja                             NA      -    <NA> #>   Anmerkung.Var Gliederung Reihenfolge        Titel rekodiert QuelleSH #> 1             -        1.1           0 Sepal Length      nein        - #> 2             -        1.1           0  Sepal Width      nein        - #> 3             -        1.2           0 Pepal Length      nein        - #> 4             -        1.2           0  Pepal Width      nein        - #> 5             -        2.1           0      Species      nein        - #>   Instruktionen Hintergrundmodell HGM.Reihenfolge HGM.Variable.erstellt.aus #> 1             -              nein               -                         - #> 2             -              nein               -                         - #> 3             -              nein               -                         - #> 4             -              nein               -                         - #> 5             -              nein               -                         - #>   intern.extern Seitenumbruch.im.Inhaltsverzeichnis #> 1             -                                nein #> 2             -                                nein #> 3             -                                nein #> 4             -                                nein #> 5             -                                nein"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"structure","dir":"Articles","previous_headings":"","what":"Structure","title":"Minimal Example","text":"key element eatCodebook package various forms variable information can supplied.","code":"struc <- createStructure(varInfo_final) head(struc) #>     Titel Ebene #> 1.1    NA     1 #> 1.2    NA   1.1 #> 1.3    NA   1.2 #> 2.1    NA     2 #> 2.2    NA   2.1 writeExcel(struc, \"example_struc.xlsx\", row.names = FALSE) struc_final <- getStructure(\"example_struc.xlsx\") #>                 Titel Ebene #> 1             Metrics     1 #> 2                <NA>   1.1 #> 3                <NA>   1.2 #> 4 Species Information     2 #> 5                <NA>   2.1"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"scale-information","dir":"Articles","previous_headings":"","what":"Scale Information","title":"Minimal Example","text":"key element eatCodebook package various forms variable information can supplied.","code":"scaleInfo <- createScaleInfo(inputForDescriptives_edited) head(scaleInfo) #> [1] varName              Quelle               Anzahl_valider_Werte #> [4] Items_der_Skala      Imputationen         #> <0 rows> (or 0-length row.names) writeExcel(scaleInfo, \"example_scaleInfo.xlsx\", row.names = FALSE) scaleInfo_final <- getScaleInfo(\"example_scaleInfo.xlsx\") #> [1] varName              Quelle               Anzahl_valider_Werte #> [4] Items_der_Skala      Imputationen         #> <0 rows> (or 0-length row.names)"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"meta-data","dir":"Articles","previous_headings":"","what":"Meta data","title":"Minimal Example","text":"Meta data can added codebook.","code":"meta <- createMetadata() meta[1, \"Title\"] <- \"Codebook Test\" meta[1, \"Author\"] <- \"Anna Muster\" meta[1, \"Keywords\"] <- \"lsa, education\" meta[1, \"Subject\"] <- \"test\" writeExcel(meta, \"example_meta.xlsx\", row.names = FALSE) meta_final <- makeMetadata(\"example_meta.xlsx\")"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"chapters","dir":"Articles","previous_headings":"","what":"Chapters","title":"Minimal Example","text":"Create chapter structure.","code":"chapters <- createChapters(varInfo_final2) chapters[1, 2] <- \"Iris Datensatz\""},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"codebok","dir":"Articles","previous_headings":"","what":"Codebok","title":"Minimal Example","text":"Now create actual codebook script via calling codebook() function.","code":"latex_skript <- codebook(varInfo = varInfo_final2, missings = miss_final, struc = struc_final,                          scaleInfo = scaleInfo_final, dat = eatGADS::extractData(dat),                          Kennwertedatensatz = descStatistics, chapters = chapters) #>  #>  Erstelle Layout-Skripte fuer: dat #>   Layout der Variable: Sepal_Length #> Warning in Latex.length(sections.var1[d], FALSE, FALSE): Fuer folgende Zeichen #> gibt es keine Laengenangaben: NA. Die Laenge von NA in Latex wird daher #> unterschaetzt. #>   Layout der Variable: Sepal_Width #>   Layout der Variable: Petal_Length #> Warning in Latex.length(sections.var1[d], FALSE, FALSE): Fuer folgende Zeichen #> gibt es keine Laengenangaben: NA. Die Laenge von NA in Latex wird daher #> unterschaetzt. #>   Layout der Variable: Petal_Width #>   Layout der Variable: Species #> Warning in Latex.length(sections.var1[d], FALSE, FALSE): Fuer folgende Zeichen #> gibt es keine Laengenangaben: NA. Die Laenge von NA in Latex wird daher #> unterschaetzt."},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"save-the-codebok","dir":"Articles","previous_headings":"","what":"Save the Codebok","title":"Minimal Example","text":"resulting object meta data separately save hard drive. objects saved folder.","code":"write.table(latex_skript , file = \"minimal_example.tex\" , fileEncoding=\"UTF-8\" ,             col.names=FALSE , row.names=FALSE , quote = FALSE ) write.table(meta_final , file = \"minimal_example_meta.xmpdata\", fileEncoding=\"UTF-8\" ,             col.names=FALSE , row.names=FALSE , quote = FALSE )"},{"path":"https://beckerbenj.github.io/eatCodebook/articles/minimal_example.html","id":"compilation","dir":"Articles","previous_headings":"","what":"Compilation","title":"Minimal Example","text":"LaTeX script codebook now saved hard drive. file now opened via Tex-Editor simply compiled. Sometimes multiple consecutive compilation steps required clean output. Alternatively, document can compiled within R, example via tools::texi2pdf().","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Becker. Author, maintainer. Sebastian Weirich. Author. Felix Milles. Author. Johanna Busse. Author.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Becker B, Weirich S, Milles F, Busse J (2025). eatCodebook: Automatic Codebook Generation. R package version 0.2.0.9000, https://github.com/beckerbenj/eatCodebook.","code":"@Manual{,   title = {eatCodebook: Automatic Codebook Generation},   author = {Benjamin Becker and Sebastian Weirich and Felix Milles and Johanna Busse},   year = {2025},   note = {R package version 0.2.0.9000},   url = {https://github.com/beckerbenj/eatCodebook}, }"},{"path":"https://beckerbenj.github.io/eatCodebook/index.html","id":"eatcodebook-","dir":"","previous_headings":"","what":"Automatic Codebook Generation","title":"Automatic Codebook Generation","text":"eatCodebook (educational assessment tools: Codebook) allows automatic creation nicely formatted codebook via LaTeX.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Codebook Generation","text":"can install development version eatCodebook Github ","code":"remotes::install_github(\"beckerbenj/eatCodebook\")"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/calculateDescriptives.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate descriptive statistics. — calculateDescriptives","title":"Calculate descriptive statistics. — calculateDescriptives","text":"Calculate descriptive statistics included codebook.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/calculateDescriptives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate descriptive statistics. — calculateDescriptives","text":"","code":"calculateDescriptives(   GADSdat,   inputForDescriptives,   verbose = FALSE,   showCallOnly = FALSE )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/calculateDescriptives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate descriptive statistics. — calculateDescriptives","text":"GADSdat Object class GADSdat, created example import_spss eatGADS package. inputForDescriptives data.frame variable information. table can either created manually Excel generated GADSdat object, using function createInputForDescriptives. need template table look like different variables, can use varInfo object created examples . Specifically, data.frame must contain following columns. varName: character column contain variable names part GADS database. varLabel: variable label corresponding variable varName column format: character columns yields format corresponding variable varName column, example F8.0 imp: Logical column (.e., TRUE/FALSE) indicates whether variable imputed type: Character column possible entries variable, item, fake_item scale. entry variable used individual variables GADSdat database belong neither scale fake scale. entry item used items belong scale. distinction needs made scale items belong .  important database contains one scales items. Assume database contains scales \"self concept\" \"interest\", \"self concept\" measured items SK_I1, SK_I2, SK_I3, \"interest\" measured items Int_I1, Int_I2, Int_I3, Int_I4. SK_I1, SK_I2, SK_I3, Int_I1, Int_I2, Int_I3, Int_I4 occur varName column, corresponding entry type item. Note database also contains scale variables \"self concept\" \"interest\". entry fake_item used items theoretically constitute one latent scales, scale variable contained database. scale: Character column scale level corresponding variable. Possible entries numeric metric variables, ordinal categorical (factor) variables, nominal. group: Character column relevant items, scales fake scale variables. others, variable name transferred . variables, indicator defined contains assignment items scales. Assume database contains scale \"self concept\" measured items SK_I1, SK_I2, SK_I3. Let scale variable \"self concept\" called SC. common entry SK_I1, SK_I2, SK_I3, scaleSelfConcept entered group column, example \"scaleSelfConcept\" verbose Print variable function information console? showCallOnly Logical: diagnostics. TRUE, calculation proceed, function called calculation returned.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/calculateDescriptives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate descriptive statistics. — calculateDescriptives","text":"Returns list descriptive statistics. format may seem unsuitable direct processing R, primarily used automatic creation codebooks using Latex.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/calculateDescriptives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate descriptive statistics. — calculateDescriptives","text":"","code":"# import spss exemplary data file <- system.file(\"extdata\", \"example1_clean.sav\", package = \"eatCodebook\") dat   <- eatGADS::import_spss(file) # create variable information by the eatCodebbok function createInputForDescriptives # This table 'varInfo' can be exported to Excel for further inspection and used as a # blueprint of what the necessary 'inputForDescriptives' argument for the # calculateDescriptives() function should look like varInfo <- createInputForDescriptives(dat, impExpr = \"plausible value\") # calculate descriptives descr <- calculateDescriptives(dat, varInfo) #> Warning: `report()` was deprecated in eatRep 0.15.0. #> ℹ For the original behavior of report() please use eatRep version 0.14.7: #>   'https://cran.r-project.org/src/contrib/Archive/eatRep/' #> ℹ The deprecated feature was likely used in the eatCodebook package. #>   Please report the issue to the authors."},{"path":"https://beckerbenj.github.io/eatCodebook/reference/checkScaleConsistency.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the mean of a scale variable equals the pooled mean of single items — checkScaleConsistency","title":"Check whether the mean of a scale variable equals the pooled mean of single items — checkScaleConsistency","text":"Function need output createInputForDescriptives() function. non-imputed scale, function checks whether (unweighted) mean scale variable equals pooled mean single items form scale.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/checkScaleConsistency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the mean of a scale variable equals the pooled mean of single items — checkScaleConsistency","text":"","code":"checkScaleConsistency(   GADSdat,   inputForDescriptives,   id,   tolerance = 0.02,   verbose = TRUE )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/checkScaleConsistency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the mean of a scale variable equals the pooled mean of single items — checkScaleConsistency","text":"GADSdat Object classGADSdat inputForDescriptives output function createInputForDescriptives() id Name column number ID variable. Argument can numeric character tolerance positive numeric value, indicating maximum allowed discrepancy mean scale variable pooled mean single items verbose Logical: Print informations console?","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/checkScaleConsistency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the mean of a scale variable equals the pooled mean of single items — checkScaleConsistency","text":"Function return output provide messages.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Create codebook script. — codebook","title":"Create codebook script. — codebook","text":"Create complete codebook latex script.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create codebook script. — codebook","text":"","code":"codebook(   varInfo,   missings,   struc,   scaleInfo,   register = NULL,   dat,   Kennwertedatensatz,   chapters,   deckblatt = \"\",   intro = \"\",   literatur = \"\",   abkuerzverz = \"\",   hintmod = \"\",   lastpage = \"\" )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create codebook script. — codebook","text":"varInfo data.frame list data.frames containing variable information, imported via getVarInfo. missings data.frame list data.frames containing missing information, imported via getMissings. struc data.frame containing structure codebook, imported via getStructure. scaleInfo data.frame containing information scales, imported via getScaleInfo. register data.frame containing information register, imported via getRegister. NULL, now register created. registers data sets , missing registers simply omitted. dat data.frame list data.frames containing data sets, imported via import_spss. Kennwertedatensatz data.frame list data.frame containing descriptive statistics, imported via calculateDescriptives. chapters data.frame list data.frames containing chapter information, imported via getChapters. Determines order chapters codebook. deckblatt Character vector cover page, created via makeCover. intro Character vector, introduction. literatur Character vector literature information, created via makeLit. abkuerzverz Character vector abbreviations, created via makeAbbrList. hintmod Character vector information background model, created via makeBGM. lastpage Character vektor, last page.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/codebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create codebook script. — codebook","text":"Codebook latex script.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create codebook script. — codebook","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createAbbrList.html","id":null,"dir":"Reference","previous_headings":"","what":"Create abbreviation list template. — createAbbrList","title":"Create abbreviation list template. — createAbbrList","text":"Create abbreviation list template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createAbbrList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create abbreviation list template. — createAbbrList","text":"","code":"createAbbrList(   headings = list(Akronyme = c(\"Abkuerzung\", \"Bedeutung\"), `Statistische Formelzeichen` =     c(\"Symbol\", \"Bedeutung\")) )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createAbbrList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create abbreviation list template. — createAbbrList","text":"headings Headings.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createAbbrList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create abbreviation list template. — createAbbrList","text":"Returns latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createAbbrList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create abbreviation list template. — createAbbrList","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createChapters.html","id":null,"dir":"Reference","previous_headings":"","what":"Create chapter template. — createChapters","title":"Create chapter template. — createChapters","text":"Create chapter template based variable information. order entries determines order documentation codebook.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createChapters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create chapter template. — createChapters","text":"","code":"createChapters(varInfo)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createChapters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create chapter template. — createChapters","text":"varInfo Object (either list data.frame) containing variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createChapters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create chapter template. — createChapters","text":"Chapter template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createChapters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create chapter template. — createChapters","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createInputForDescriptives.html","id":null,"dir":"Reference","previous_headings":"","what":"Create input data.frame for subsequent calculation of descriptives — createInputForDescriptives","title":"Create input data.frame for subsequent calculation of descriptives — createInputForDescriptives","text":"Create variable information data.frame GADSdat object. input can used calculate descriptives data via calculateDescriptives function. See details section information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createInputForDescriptives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create input data.frame for subsequent calculation of descriptives — createInputForDescriptives","text":"","code":"createInputForDescriptives(   GADSdat,   idExpr = \"^ID\",   impExpr = c(\"IMPUTATION\\\\s+{0,1}[[:digit:]]{1,2}\", \"PV\\\\s+{0,1}[[:digit:]]{1,2}\"),   scaleExpr = \"^Skala\",   itemExpr = \"plausible|indikator\",   fakeItemExpr = \"fake\",   nwExpr = \"IDinClass\",   varNameSeparatorImp = \"_\",   ncharSeparatorImp = 2,   lastOccurrence = TRUE,   groupSuffixImp = \"imp\",   nCatsForOrdinal = c(2:5),   nwVarNameSeparatorImp = \"_\",   nwNcharSeparatorImp = 6,   nwLastOccurrence = TRUE,   verbose = FALSE )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createInputForDescriptives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create input data.frame for subsequent calculation of descriptives — createInputForDescriptives","text":"GADSdat Object class GADSdat, created import_spss eatGADS package, example. Alternatively, list objects class GADSdat idExpr Regular expression identify ID variables variable names (Note: multiple expressions, .e. idExpr character vector length > 1, least one expression match identify variable ID variable). use regular expression due fact data records often contain just one, several identification variables, example pupils, teachers, schools, classes federal states. Logically, descriptive values reported identification variables. must specified subsequent calculateDescriptives function knows, speak, variables descriptive values calculated. impExpr Regular expression identify imputed variables variable labels GADSdat object (Note: multiple expressions, .e. impExpr character vector length > 1, least one expression match identify variable imputed variable). Regular expressions also used , several variables (different individual IDs) can imputed. scaleExpr Regular expression identify scale fake scale variables variable labels GADSdat object (Note: multiple expressions, .e. scaleExpr character vector length > 1, least one expression match identify variable scale variable). Scales defined several items measure common (latent) construct also variable represents scale value. scale variable represents usually averaged (otherwise aggregated) value within person across items scale. Fake scales defined several items measure common (latent) construct, additional variable represents scale value. itemExpr Regular expression identify items constitute true scale variable labels GADSdat object. Note: regular expressions identify items must entered . additional scale variables specified. several scales defined data set (e.g. \"self concept\" interest), distinction needs made items belong scale. (done elsewhere.) Assume \"self concept\" measured items SK_I1, SK_I2, SK_I3, scale variable called SK_scale. Let us also assume \"interest\" measured items Int_I1, Int_I2, Int_I3, Int_I4, scale variable called Int_scale. specified : itemExpr = \"[1-4]{1}$\" fakeItemExpr Regular expression identify fake items constitute fake scale variable labels GADSdat object. works way itemExpr. nwExpr Regular expression identify network variables variable labels GADSdat object (Note: multiple expressions, .e. nwExpr character vector length > 1, least one expression match identify variable network variable) varNameSeparatorImp character sign separate \"pooled\" suffix group name group column. example, multiple imputed variables occur wide-format data.frame pv_1, pv_2, pv_3, use \"_\". sign exists data, .e. multiple imputations occur pv1, pv2, pv3, instead pv_1, pv_2, pv_3, pv.1, pv.2, pv.3, use NA NULL \"\". case, specify ncharSeparatorImp argument. ncharSeparatorImp Integer: relevant varNameSeparatorImp exists, .e. multiple imputations occur pv1, pv2, pv3, instead pv_1, pv_2, pv_3, pv.1, pv.2, pv.3. ncharSeparatorImp specifies number character signs trimmed identify common variable stem. varNameSeparatorImp NA NULL \"\", ncharSeparatorImp ignored. example, multiple imputations occur pv_1, pv_2, pv_3, use varNameSeparatorImp = \"_\". multiple imputations occur pv1, pv2, pv3, use varNameSeparatorImp = NULL ncharSeparatorImp = 2. first 2 signs variables names (.e., \"pv\") used identify imputed variables belong common stem. lastOccurrence Logical: varNameSeparatorImp occurrs multiple times within string, lastOccurrence defines whether last occurrence used splitting groupSuffixImp tbd nCatsForOrdinal Numeric vector number categories considered ordinal variables. Variables number categories defined considered ordinal instead nominal. NULL, rule ignored, nominal/ordinal assignment done ways nwVarNameSeparatorImp character sign separate network variable names network variable groups. example, network variables occur friend_1, friend_2, ..., friend_12, use \"_\". sign exists data, .e. network variable names occur friend1, friend2, ..., friend12, use NA NULL \"\". case, specify nwNcharSeparatorImp argument. nwNcharSeparatorImp Integer: relevant nwVarNameSeparatorImp exists, .e. network variables occur friend1, friend2, ..., friend12, instead friend_1, friend_2, ..., friend_12. nwVcharSeparatorImp specifies number character signs trimmed identify common variable stem. nwVarNameSeparatorImp NA NULL \"\", ncharSeparatorImp ignored. example, network variables occur friend_1, friend_2, ..., friend_12, use nwVarNameSeparatorImp = \"_\". network variables occur friend1, friend2, ..., friend12, use nwVarNameSeparatorImp = NULL nwNcharSeparatorImp = 6. first 6 signs variables names (.e., \"friend\") used identify group. nwLastOccurrence Logical: nwVarNameSeparatorImp occurrs multiple times within string, nwLastOccurrence defines whether last occurrence used splitting verbose scale identification reported?","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createInputForDescriptives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create input data.frame for subsequent calculation of descriptives — createInputForDescriptives","text":"Returns data.frame variable information following columns varName name variable occurs data varLabel label variable occurs GADSdat label sheet format variable format displayed labels sheet GADSdat object imp Logical: Whether variable imputed type type variable. Two possible entries, variable scale scale scale level variable. Possible entries: nominal, ordinal, numeric. ID variables character variables missing entries column. cautious 'ordinal' sometimes may allocated erroneously. resulting table exported Excel checks. group variable part scale several items, common entry group column indicates variables belong together","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createInputForDescriptives.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create input data.frame for subsequent calculation of descriptives — createInputForDescriptives","text":"eatCodebook package aims create human-readable pdf codebook GADSdat data base object. codebook contains information variables used study, including descriptive properties. descriptive properties reported codebook depends, among things, scale level variables. example, mean standard deviation reported metric variables frequency distributions categorical variables. non-imputed variables, proportion missing values also given, scale variables, number items make scale internal consistency scale given. codebook created several steps. first step, createInputForDescriptives function used generate auxiliary object database contains information type descriptive information reported variable. object created function basis calculateDescriptives function.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createInputForDescriptives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create input data.frame for subsequent calculation of descriptives — createInputForDescriptives","text":"","code":"varInfo <- createInputForDescriptives(eatGADS::pisa, impExpr = \"Plausible Value\")"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createLitInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create literature template. — createLitInfo","title":"Create literature template. — createLitInfo","text":"Create literature template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createLitInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create literature template. — createLitInfo","text":"","code":"createLitInfo(varInfo = NULL)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createLitInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create literature template. — createLitInfo","text":"varInfo varInfo object imported getVarInfo.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createLitInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create literature template. — createLitInfo","text":"Literature template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createLitInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create literature template. — createLitInfo","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create meta data template. — createMetadata","title":"Create meta data template. — createMetadata","text":"Create meta data template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create meta data template. — createMetadata","text":"","code":"createMetadata()"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create meta data template. — createMetadata","text":"Returns meta data template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create meta data template. — createMetadata","text":"","code":"createMetadata #> function ()  #> { #>     data.frame(Title = character(), Author = character(), Keywords = character(),  #>         Subject = character()) #> } #> <bytecode: 0x55b46f24ea88> #> <environment: namespace:eatCodebook>"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMissings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create missing value information. — createMissings","title":"Create missing value information. — createMissings","text":"Create information value level (value labels missing codes).","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMissings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create missing value information. — createMissings","text":"","code":"createMissings(GADSdat, inputForDescriptives)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMissings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create missing value information. — createMissings","text":"GADSdat GADSdat object. inputForDescriptives Input descriptive statistics calculation.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMissings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create missing value information. — createMissings","text":"Returns value information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createMissings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create missing value information. — createMissings","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createRegister.html","id":null,"dir":"Reference","previous_headings":"","what":"Create register template. — createRegister","title":"Create register template. — createRegister","text":"Create register template based variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createRegister.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create register template. — createRegister","text":"","code":"createRegister(inputForDescriptives, keywordList = NULL)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createRegister.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create register template. — createRegister","text":"inputForDescriptives Object (either list data.frame) containing variable information. keywordList Character vector keyword columns added. NULL, additional columns added. inputForDescriptives list, keywordList must also list (character vectors).","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createRegister.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create register template. — createRegister","text":"Register template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createRegister.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create register template. — createRegister","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createScaleInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create scale information. — createScaleInfo","title":"Create scale information. — createScaleInfo","text":"Create information scale imputation aggregation. Scales, 'fake scales', imputed variables listed.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createScaleInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create scale information. — createScaleInfo","text":"","code":"createScaleInfo(inputForDescriptives)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createScaleInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create scale information. — createScaleInfo","text":"inputForDescriptives inputForDescriptives object created createInputForDescriptives function","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createScaleInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create scale information. — createScaleInfo","text":"Returns data.frame following information: varName name variable occurs data Quelle name data set variable belongs .  meaningful, inputForDescriptives list  (meaning function runs multiple data sets). Anzahl_valider_Werte scale, many values NA items  non NA value scale? Items_der_Skala items imputations belong scale?  column used display item names codebook. Imputationen imputations belong pooled variable?  column used display number imputations codebook.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createScaleInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create scale information. — createScaleInfo","text":"Currently, displaying items imputed scale supported codebook() function. Even though items imputed scale can defined scaleInfo, information simply ignored creation codebook.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createScaleInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create scale information. — createScaleInfo","text":"","code":"# import spss exemplary data file <- system.file(\"extdata\", \"example1_clean.sav\", package = \"eatCodebook\") dat   <- eatGADS::import_spss(file) inputForDescriptives <- createInputForDescriptives(dat, impExpr = \"plausible value\")  scaleInfo <- createScaleInfo(inputForDescriptives)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create structure template. — createStructure","title":"Create structure template. — createStructure","text":"Create structure template based variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create structure template. — createStructure","text":"","code":"createStructure(varInfo = NULL)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create structure template. — createStructure","text":"varInfo Object (either list data.frame) containing variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create structure template. — createStructure","text":"Structure template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createStructure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create structure template. — createStructure","text":"create structure template, information columns 'Unterteilung.im.Skalenhandbuch' 'Gliederung' used.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createStructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create structure template. — createStructure","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createVarInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create variable information template. — createVarInfo","title":"Create variable information template. — createVarInfo","text":"Create variable information (background model, variables data set, ...) template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createVarInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create variable information template. — createVarInfo","text":"","code":"createVarInfo(   GADSdat,   inputForDescriptives,   encodingList = NULL,   makeStructure = FALSE )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createVarInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create variable information template. — createVarInfo","text":"GADSdat GADSdat object. inputForDescriptives Input descriptive statistics calculation. encodingList tbd. makeStructure automatic structuring variables created?","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createVarInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create variable information template. — createVarInfo","text":"Returns variable information template.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/createVarInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create variable information template. — createVarInfo","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/embedLatexSnippet.html","id":null,"dir":"Reference","previous_headings":"","what":"Embed a Latex Snippet. — embedLatexSnippet","title":"Embed a Latex Snippet. — embedLatexSnippet","text":"Embed Latex Snippet Latex environment used codebook..","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/embedLatexSnippet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Embed a Latex Snippet. — embedLatexSnippet","text":"","code":"embedLatexSnippet(snippet)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/embedLatexSnippet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Embed a Latex Snippet. — embedLatexSnippet","text":"snippet Latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/embedLatexSnippet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Embed a Latex Snippet. — embedLatexSnippet","text":"testable latex script.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/embedLatexSnippet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Embed a Latex Snippet. — embedLatexSnippet","text":"","code":"latexSnippet <- embedLatexSnippet(\"This is a sentence.\")"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getAbbrList.html","id":null,"dir":"Reference","previous_headings":"","what":"Import abbreviation list. — getAbbrList","title":"Import abbreviation list. — getAbbrList","text":"Import abbreviation list.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getAbbrList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import abbreviation list. — getAbbrList","text":"","code":"getAbbrList(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getAbbrList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import abbreviation list. — getAbbrList","text":"filePath Path excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getAbbrList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import abbreviation list. — getAbbrList","text":"Abbreviation list.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getAbbrList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import abbreviation list. — getAbbrList","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getChapters.html","id":null,"dir":"Reference","previous_headings":"","what":"Import chapter structure information. — getChapters","title":"Import chapter structure information. — getChapters","text":"Import chapter structure information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getChapters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import chapter structure information. — getChapters","text":"","code":"getChapters(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getChapters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import chapter structure information. — getChapters","text":"filePath Path excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getChapters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import chapter structure information. — getChapters","text":"Chapter structure information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getChapters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import chapter structure information. — getChapters","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from Excel. — getExcel","title":"Import data from Excel. — getExcel","text":"Import sheets Excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from Excel. — getExcel","text":"","code":"getExcel(filePath, funList = NULL)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from Excel. — getExcel","text":"filePath Path excel file. funList tbd.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getExcel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from Excel. — getExcel","text":"Either data.frame (Excel file single sheet) named list (Excel file multiple sheets).","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getExcel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from Excel. — getExcel","text":"","code":"filePath <- system.file(\"extdata\", \"example_abbrList.xlsx\", package = \"eatCodebook\") excel_list   <- getExcel(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getInputForDescriptives.html","id":null,"dir":"Reference","previous_headings":"","what":"Import input for descriptives information. — getInputForDescriptives","title":"Import input for descriptives information. — getInputForDescriptives","text":"Import input descriptives information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getInputForDescriptives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import input for descriptives information. — getInputForDescriptives","text":"","code":"getInputForDescriptives(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getInputForDescriptives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import input for descriptives information. — getInputForDescriptives","text":"filePath Path excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getInputForDescriptives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import input for descriptives information. — getInputForDescriptives","text":"variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getInputForDescriptives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import input for descriptives information. — getInputForDescriptives","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getLitInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Import literature information. — getLitInfo","title":"Import literature information. — getLitInfo","text":"Import literature information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getLitInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import literature information. — getLitInfo","text":"","code":"getLitInfo(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getLitInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import literature information. — getLitInfo","text":"filePath Path excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getLitInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import literature information. — getLitInfo","text":"Literature information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getLitInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import literature information. — getLitInfo","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getMissings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get value information. — getMissings","title":"Get value information. — getMissings","text":"Get information value level (value labels missing codes).","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getMissings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get value information. — getMissings","text":"","code":"getMissings(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getMissings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get value information. — getMissings","text":"filePath Path excel-file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getMissings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get value information. — getMissings","text":"Returns value information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getMissings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get value information. — getMissings","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getRegister.html","id":null,"dir":"Reference","previous_headings":"","what":"Import register excel. — getRegister","title":"Import register excel. — getRegister","text":"Import register excel.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getRegister.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import register excel. — getRegister","text":"","code":"getRegister(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getRegister.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import register excel. — getRegister","text":"filePath Path excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getRegister.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import register excel. — getRegister","text":"Register.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getRegister.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import register excel. — getRegister","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getScaleInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get scale information. — getScaleInfo","title":"Get scale information. — getScaleInfo","text":"Get information scale aggregation.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getScaleInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get scale information. — getScaleInfo","text":"","code":"getScaleInfo(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getScaleInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get scale information. — getScaleInfo","text":"filePath Path excel-file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getScaleInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get scale information. — getScaleInfo","text":"Returns scale information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getScaleInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get scale information. — getScaleInfo","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Import structure information. — getStructure","title":"Import structure information. — getStructure","text":"Import structure information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import structure information. — getStructure","text":"","code":"getStructure(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import structure information. — getStructure","text":"filePath Path excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import structure information. — getStructure","text":"Structure information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getStructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import structure information. — getStructure","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getVarInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Import variable information. — getVarInfo","title":"Import variable information. — getVarInfo","text":"Import variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getVarInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import variable information. — getVarInfo","text":"","code":"getVarInfo(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getVarInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import variable information. — getVarInfo","text":"filePath Path excel file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getVarInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import variable information. — getVarInfo","text":"variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/getVarInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import variable information. — getVarInfo","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/inferLayout.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer layout column in a variable information. — inferLayout","title":"Infer layout column in a variable information. — inferLayout","text":"Temporary function: Infers layout numeric code SPSS format variable data information inputForDescriptives.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/inferLayout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer layout column in a variable information. — inferLayout","text":"","code":"inferLayout(varInfo, GADSdat, inputForDescriptives)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/inferLayout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer layout column in a variable information. — inferLayout","text":"varInfo varInfo object. GADSdat GADSdat object. inputForDescriptives Input descriptive statistics calculation.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/inferLayout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer layout column in a variable information. — inferLayout","text":"Returns modified variable information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/inferLayout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infer layout column in a variable information. — inferLayout","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeAbbrList.html","id":null,"dir":"Reference","previous_headings":"","what":"Create abbreviation list. — makeAbbrList","title":"Create abbreviation list. — makeAbbrList","text":"Create abbreviation lists latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeAbbrList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create abbreviation list. — makeAbbrList","text":"","code":"makeAbbrList(   filePath,   captions = list(Akronyme =     \"Abk{\\\\\\\"u}rzungen\", `Statistische Formelzeichen` = \"Statistische Formelzeichen\"),   sort.entries = TRUE )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeAbbrList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create abbreviation list. — makeAbbrList","text":"filePath Path file. captions tbd sort.entries abbreviation lists sorted alphabetically?","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeAbbrList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create abbreviation list. — makeAbbrList","text":"Returns latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeAbbrList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create abbreviation list. — makeAbbrList","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeBGM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create background model information. — makeBGM","title":"Create background model information. — makeBGM","text":"Create background model information.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeBGM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create background model information. — makeBGM","text":"","code":"makeBGM(varueInfo)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeBGM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create background model information. — makeBGM","text":"varueInfo Variable information","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeBGM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create background model information. — makeBGM","text":"Returns latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeBGM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create background model information. — makeBGM","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeCover.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cover page. — makeCover","title":"Create cover page. — makeCover","text":"Create cover page.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeCover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cover page. — makeCover","text":"","code":"makeCover(   logoFile = NULL,   maintitle = NULL,   subtitle = NULL,   authors = NULL,   addAuthors = NULL,   schriftenreihe = NULL,   bibinfo = NULL )"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeCover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cover page. — makeCover","text":"logoFile Path graphic file. maintitle Main title document. subtitle Sub title document. authors Authors document. addAuthors Additional contributers document. schriftenreihe Schriftenreihe document. bibinfo Bibiolografic info document.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeCover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cover page. — makeCover","text":"Returns latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeCover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create cover page. — makeCover","text":"","code":"makeCover(maintitle = \"Study of Achievement\", subtitle = \"Codebook of Study of Achievement\",          authors = \"Some Person\", addAuthors = \"With the help of some other persons\",          schriftenreihe = \"Book 9 of Studies of Achievement\") #>  [1] \"\\\\thispagestyle{empty}\"                                         #>  [2] \"\\\\vspace*{75mm}\"                                                #>  [3] \"\\\\begin{Huge}\"                                                  #>  [4] \"\\\\color{iqbrot} \\\\textbf{Study of Achievement} \\\\par \\\\medskip\" #>  [5] \"\\\\end{Huge}\"                                                    #>  [6] \"\\\\begin{Large}\"                                                 #>  [7] \"\\\\textbf{Codebook of Study of Achievement}\\\\par \\\\bigskip\"      #>  [8] \"\\\\end{Large}\"                                                   #>  [9] \"\\\\begin{large}\"                                                 #> [10] \"Some Person\"                                                    #> [11] \"\\\\end{large}\"                                                   #> [12] \"\\\\bigskip\\n\"                                                    #> [13] \"\\\\vfill\"                                                        #> [14] \"Stand: \\\\today \\\\par\"                                           #> [15] \"With the help of some other persons\\\\par\"                       #> [16] \"Book 9 of Studies of Achievement \\n\"                            #> [17] \"\\\\pagebreak\"                                                    #> [18] \"\\\\thispagestyle{empty}\"                                         #> [19] \"\\\\pagenumbering{gobble} % frisst die Seitenzahlen\"              #> [20] \"\\\\quad\"                                                         #> [21] \"\\\\vfill\\n\""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeLit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create literature latex snippet. — makeLit","title":"Create literature latex snippet. — makeLit","text":"Create literature latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeLit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create literature latex snippet. — makeLit","text":"","code":"makeLit(litInfo)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeLit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create literature latex snippet. — makeLit","text":"litInfo Literature information..","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeLit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create literature latex snippet. — makeLit","text":"Literature latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeLit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create literature latex snippet. — makeLit","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create meta data snippet. — makeMetadata","title":"Create meta data snippet. — makeMetadata","text":"Create meta data latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create meta data snippet. — makeMetadata","text":"","code":"makeMetadata(filePath)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create meta data snippet. — makeMetadata","text":"filePath Path file.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create meta data snippet. — makeMetadata","text":"Returns latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create meta data snippet. — makeMetadata","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeRegister.html","id":null,"dir":"Reference","previous_headings":"","what":"Create register. — makeRegister","title":"Create register. — makeRegister","text":"Create register latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeRegister.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create register. — makeRegister","text":"","code":"makeRegister(fbshort, fblong, fb.akt, varue.reg, double.vars)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeRegister.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create register. — makeRegister","text":"fbshort Short name data set fblong Full name data set fb.akt Relevant entry fbshort. varue.reg Informationen zum Register: data.frame, Spalten sind Schlagwoerter, die im Register aufgelistet sind, Zeilen sind VarNamen. Eintraege sind \"x\" oder \"\", ob Variable unter dem Schlagwort im Register aufgelistet werden soll. double.vars Character vector containing duplicate variable names different data sets.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeRegister.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create register. — makeRegister","text":"Returns (character vector) latex snippet.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/makeRegister.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create register. — makeRegister","text":"","code":"#tbd"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/writeExcel.html","id":null,"dir":"Reference","previous_headings":"","what":"Save to .xlsx. — writeExcel","title":"Save to .xlsx. — writeExcel","text":"Create .xlsx file multiple sheets.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/writeExcel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save to .xlsx. — writeExcel","text":"","code":"writeExcel(df_list, filePath, row.names = FALSE, col.names = TRUE)"},{"path":"https://beckerbenj.github.io/eatCodebook/reference/writeExcel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save to .xlsx. — writeExcel","text":"df_list named list data.frames written .xlsx. names list become sheet names. filePath path output file. row.names Logical: row names data.frames written file? col.names Logical: column names data.frames written file?","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/writeExcel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save to .xlsx. — writeExcel","text":"existing file overwritten.","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/reference/writeExcel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save to .xlsx. — writeExcel","text":"","code":"f <- tempfile(fileext = \".xlsx\") writeExcel(mtcars, filePath = f)"},{"path":"https://beckerbenj.github.io/eatCodebook/news/index.html","id":"eatcodebook-0209000","dir":"Changelog","previous_headings":"","what":"eatCodebook 0.2.0.9000","title":"eatCodebook 0.2.0.9000","text":"createScaleInfo() now treats scales imputed variables separately via columns ‘Anzahl_der_Items’ ‘Imputationen’ (#28)","code":""},{"path":"https://beckerbenj.github.io/eatCodebook/news/index.html","id":"eatcodebook-020","dir":"Changelog","previous_headings":"","what":"eatCodebook 0.2.0","title":"eatCodebook 0.2.0","text":"Initial Github release.","code":""}]
